/*************************************************************************
 * This file is part of CodeOps Studio.
 * CodeOps Studio - code anywhere anytime
 * https://github.com/euptron/CodeOps-Studio
 * Copyright (C) 2024 EUP
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see https://www.gnu.org/licenses/
 *
 * If you have more questions, feel free to message EUP if you have any
 * questions or need additional information. Email: etido.up@gmail.com
 *************************************************************************/
 
plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.gms.oss-licenses-plugin'
}

    def secretsPropertiesFile = rootProject.file("secrets.properties")
    def secretsProperties = new Properties()
    def signingEnabled = secretsPropertiesFile.exists() && secretsPropertiesFile.text.trim() != ""

android {
    namespace project.ext.appNameSpace
    compileSdk project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        applicationId project.ext.applicationId
        minSdk project.ext.minSdkVersion
        targetSdk project.ext.targetSdkVersion
        versionCode project.ext.appVersionCode
        versionName project.ext.appVersionName
        // enabled multi dex (true) for desugar to work
        multiDexEnabled false
        vectorDrawables.useSupportLibrary = true
    }

    if(signingEnabled) {
        secretsProperties.load(new FileInputStream(secretsPropertiesFile))
    }

    signingConfigs {
      global {
        storeFile file ("codeopsstudio.keystore")
        keyAlias "CodeOps-Studio"
        keyPassword secretsProperties['KEY_PASSWORD']
        storePassword secretsProperties['STORE_PASSWORD']
      }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization
            minifyEnabled false
            // Enables resource shrinking
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if(signingEnabled) {
              signingConfig signingConfigs.global
            }
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile ('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if(signingEnabled) {
              signingConfig signingConfigs.global
            }
        }
    }

    compileOptions {
        //coreLibraryDesugaringEnabled true
        sourceCompatibility project.ext.javaSourceVersion
        targetCompatibility project.ext.javaTargetVersion
    }
    
    lint {
        abortOnError false // continue build even if lint error is detected
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }
    
    packagingOptions {
        // TODO: Verify that the exclusion would not affect app functionality
        // Pick specific files and exclude others
        pickFirst "license/README.dom.txt"
        exclude "license/LICENSE.dom-documentation.txt"
        exclude "license/LICENSE.dom-software.txt"

        // Exclude entire directories or patterns of files
        exclude 'license/NOTICE'
        exclude 'license/LICENSE'
        exclude 'META-INF/eclipse.inf'
        exclude 'about_files/LICENSE-2.0.txt'
        exclude 'plugin.xml'
        exclude 'plugin.properties'
    }
}

dependencies {
    implementation google.material
    implementation androidx.appcompat
    implementation androidx.preference
    implementation androidx.constraintlayout
    implementation google.licenses
    implementation androidx.navigation_fragment
    implementation androidx.navigation_ui
    implementation androidx.splashscreen
    implementation other.commonmark
    
    // firebase (google.firebase_bom is bom) rest are dependents
    implementation platform(google.firebase_bom)
    implementation google.firebase_analytics
    implementation google.firebase_crashlytics
    // Local Modules
    implementation project(path: ":pane")
    implementation project(path: ":common")
    implementation project(path: ":server")
    implementation project(path: ":ast-core")
    implementation project(path: ":treeview")
    implementation project(path: ":shared-res")
    implementation project(path: ":code-editor")
    implementation project(path: ":share-layout")
    
    //coreLibraryDesugaring other.desugar
    debugImplementation other.leakcanary_android
}
